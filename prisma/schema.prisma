datasource db {
  provider = "postgresql" // or your preferred database provider
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id             String    @id @default(cuid())

  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  password       String?
  role           UserRole  @default(USER)
}

model Team {
  id          String    @id @default(cuid())
  name        String
  description String?
	
	userId      String
  
	members     Member[]
  interviewees Interviewee[]
	results     Result[]
}

model Member {
  id          String    @id @default(cuid())
  name        String
  dateOfBirth DateTime

	taroCard    TaroCard? @relation(fields: [taroCardid], references: [id])
	taroCardid String?

  teamId      String
  team        Team      @relation(fields: [teamId], references: [id])
}


model Interviewee {
  id        String   @id @default(uuid())
  name      String
  dateOfBirth DateTime

  taroCard  TaroCard @relation(fields: [taroCardId], references: [id])
  taroCardId String

  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String

	results   Result[]

	compatibilityTaro String?
	compatibilityAstro String?
}


model TaroCard {
  id      String   @id @default(cuid())
  name    String
	url		 	String
	meaning String?
	strength String?
	weakness String?
  members Member[]
  interviewees Interviewee[]
}

model Result {
	id        String   @id @default(uuid())
	date      DateTime

	teamId    String
	team      Team     @relation(fields: [teamId], references: [id])

	intervieweeId String
	interviewee Interviewee @relation(fields: [intervieweeId], references: [id])

	compatibilityTaroPercent String?
	compatibilityTaroDescription String?

	compatibilityAstroPercent String?
	compatibilityAstroDescription String?
}